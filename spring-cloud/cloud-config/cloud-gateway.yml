hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 60000 # 熔断时间, 断路器的超时时间需要大于ribbon的超时时间，不然不会触发重试, ribbon是重试机制，重试时间超过断路器的时间即中止

  propagate:
    request-attribute:
      enabled: true
  threadpool:
    default:
      #该参数用来设置执行命令线程池的核心线程数，该值也是命令执行的最大并发量
      coreSize: 5000 #生产环境建议线程池（默认是 10 个线程）不要设置过大，否则大量堵塞线程有可能会拖慢服务器
      maxQueueSize: -1
     # queueSizeRejectionThreshold: 5000
     # maxConcurrentRequests: 1000
      maximumSize: 10000   #该参数用来设置线程池的最大队列大小
      allowMaximumSizeToDivergeFromCoreSize: true
# ribbonTimeout = (ribbonReadTimeout + ribbonConnectTimeout) * (maxAutoRetries + 1) * (maxAutoRetriesNextServer + 1); } return ribbonTimeout; }
#  (1000+1000)*(10+1)*(5+1)
# 全局的设置ribbon的信息
ribbon:
  ReadTimeout: 1000 # 请求处理的超时时间
  ConnectTimeout: 3000 # 请求连接的超时时间
  MaxAutoRetries: 1 #对当前实例的重试次数
  MaxAutoRetriesNextServer: 5 # 切换实例的重试次数
  OkToRetryOnAllOperations: true # 对所有操作请求都进行重试
  MaxTotalConnections: 500000   #Ribbon允许最大连接数，即所有后端微服务实例请求并发数之和的最大值。
  MaxConnectionsPerHost: 500000   #单个后端微服务实例能接收的最大请求并发数
  eager-load:
    enabled: true
    clients: cloud-service-order

# tomcat调优参数
server:
  tomcat:
    max-threads: 6000 # Maximum amount of worker threads.
    min-spare-threads: 5000 # Minimum amount of worker threads

fallback:
  isolation:
     semaphore:
        maxConcurrentRequests: 5000
zuul:
  host:
    connect-timeout-millis: 10000 # 连接超时时间
    socket-timeout-millis: 60000 # 超时时间
    max-total-connections: 500000  #zuul内部路由可以理解为使用一个线程池去发送路由请求，所以我们也需要扩大这个线程池的容量
    max-per-route-connections: 500000
  debug:
    request: false
  retryable: true  #重试机制开关
  ignoredServices: '*'
  sensitive-headers:
  custom-sensitive-headers: true
  ribbon-isolation-strategy: thread
  threadPool:
     useSeparateThreadPools: true
     threadPoolKeyPrefix: zuulgw
  prefix:
  ratelimit:
    key-prefix: cloud-gateway
    enabled: true
    repository: REDIS
    behind-proxy: true
    default-policy: #optional - will apply unless specific policy exists
      limit: 1000000 #optional - request number limit per refresh interval window
     # quota: 1 #optional - request time limit per refresh interval window (in seconds)
      refresh-interval: 60 #default value (in seconds)
      type: #optional
        - user
        - origin
        - url
  routes:
 #   cloud-service-auth:
 #     path: /auth/**
  #   cloud-service-profit:
  #     path: /profit/**
    cloud-service-user:
      path: /user/**
    cloud-service-activities:
      path: /activities/**
    cloud-service-order:
      path: /order/**


system:
  openProp:
    timeFrame: 120
  token:
    ignorePath: /**/api/**,/management/**,/sso/login/**, /**/open/**, /**/share/**, /ticket/**, /payment/login/**, /**/swagger-ui.html, /**/webjars/**, /**/v2/api-docs/**, /**/swagger-resources/**